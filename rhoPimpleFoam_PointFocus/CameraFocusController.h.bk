#include<InSituVis/Lib/EntropyBasedCameraPathController.h>

namespace local
{

class CameraFocusController : public InSituVis::EntropyBasedCameraPathController
{
public:
    using BaseClass = InSituVis::EntropyBasedCameraPathController;
private:
    size_t m_interval = 20;
    float m_max_entropy = 0.0f;
    kvs::Vec3 m_max_position{ 0.0f, 12.0f, 0.0f };
    kvs::Quat m_max_rotation{ 0.0f, 0.0f, 0.0f, 1.0f };
    kvs::Quat m_erp_rotation{ 0.0f, 0.0f, 0.0f, 1.0f };
    std::queue<float> m_max_entropies{};
    std::queue<kvs::Vec3> m_max_positions{};
    std::queue<kvs::Quat> m_max_rotations{};
    std::queue<std::tuple<float, kvs::Quat>> m_path{};
    std::vector<float> m_path_positions{};
    std::vector<float> m_path_entropies{};
    DataQueue m_data_queue{};
    Data m_previous_data{};
    EntropyFunction m_entropy_function = MixedEntropy( LightnessEntropy(), DepthEntropy(), 0.5f );
    Interpolator m_interpolator = Squad();
    kvs::Vec3 m_max_focus_point{ 0.0f, 0.0f, 0.0f };
    std::queue<kvs::Vec3> m_max_focus_points{};
    std::queue<kvs::Vec3> m_focus_path{};
    std::vector<float> m_focus_path_positions{};
    kvs::Vec3 m_erp_focus{ 0.0f, 0.0f, 0.0f };


public:
    void setMaxFocusPoint( const kvs::Vec3& focus_point ) { m_max_focus_point = focus_point; }
    kvs::Vec3 maxFocusPoint() const { return m_max_focus_point; }
    const std::vector<float>& focusPathPositions() const { return m_focus_path_positions; }
    void setErpFocus( const kvs::Vec3& erp_focus ) { m_erp_focus = erp_focus; }
    kvs::Vec3 erpFocus() const { return m_erp_focus; }
    size_t entropyIntervals() const { return m_interval; }
    void setEntropyInterval( const size_t interval ) { m_interval = interval; }


protected:
    kvs::Vec3 Lerp(const kvs::Vec3& f2, const kvs::Vec3& f3, const float t);
    virtual void process( const Data& data ){};
    virtual void process( const Data& data, const float radius, const kvs::Quaternion& rotation, const kvs::Vec3& focus ){};
    void push2( const Data& data );
    void createFocusPath(
        const kvs::Vec3& f2,
        const kvs::Vec3& f3,
        const size_t point_interval
    );    
};
}
#include "CameraFocusController.hpp"